return function()
    local Event = require(script.Parent)

    describe("event", function()
		it("should create a new event", function()
			local event = Event.new()
			expect(event).to.be.ok()
			expect(event.className).to.equal("Event")
		end)
		it("should fire the event", function()
			local event = Event.new()
			local fired = false
			event:connect(function()
				fired = true
			end)
			event:fire()
			task.defer(function()
				expect(fired).to.equal(true)
			end)
		end)
		it("should fire the event with a value", function()
			local event = Event.new()
			local fired
			event:connect(function(value)
				fired = value
			end)
			event:fire("Hello, world!")
			task.defer(function()
				expect(fired).to.equal("Hello, world!")
			end)
		end)
		it("should disconnect the event", function()
			local event = Event.new()
			local fired = false
			local connection = event:connect(function()
				fired = true
			end)
			connection:disconnect()
			event:fire()
			expect(fired).to.equal(false)
		end)
		it("should destroy the event", function()
			local event = Event.new()
			event:destroy()
			task.defer(function()
				expect(event._connections).never.to.be.ok()
				expect(event._callbacks).never.to.be.ok()
				expect(event._values).never.to.be.ok()
			end)
		end)
    end)
end