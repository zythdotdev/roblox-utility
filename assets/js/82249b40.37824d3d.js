"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[746],{68478:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new `Zone` object","params":[{"name":"part","desc":"The `Part` instance that defines the zones physical boundaries","lua_type":"Part"},{"name":"updateInterval","desc":"An optional interval in seconds between each check for players. Defaults to 1","lua_type":"number?"},{"name":"overlapParams","desc":"An optional `OverlapParams` instance that defines the parameters for underlying checks","lua_type":"OverlapParams?"}],"returns":[{"desc":"The `Zone` object","lua_type":"Zone"}],"function_type":"static","tags":["Static"],"source":{"line":161,"path":"src/Modules/Zone/init.lua"}},{"name":"destroy","desc":"Deconstructs the `Zone` object","params":[{"name":"self","desc":"","lua_type":"Zone"}],"returns":[],"function_type":"static","source":{"line":197,"path":"src/Modules/Zone/init.lua"}},{"name":"enable","desc":"Enables the `Zone` object. Any players that enter or leave the zone after it has been enabled will trigger the `playerAdded` and `playerRemoved` events respectively","params":[{"name":"self","desc":"","lua_type":"Zone"}],"returns":[],"function_type":"static","source":{"line":235,"path":"src/Modules/Zone/init.lua"}},{"name":"disable","desc":"Disables the `Zone` object. Players will no longer be detected and the current list of detected players will be cleared","params":[{"name":"self","desc":"","lua_type":"Zone"}],"returns":[],"function_type":"static","source":{"line":266,"path":"src/Modules/Zone/init.lua"}},{"name":"getDetectedPlayers","desc":"Returns an array of players that are currently in the zone","params":[{"name":"self","desc":"","lua_type":"Zone"}],"returns":[{"desc":"An array of players that are currently detected in the zone","lua_type":"{Player}"}],"function_type":"static","source":{"line":283,"path":"src/Modules/Zone/init.lua"}},{"name":"getDetectedHumanoidRootParts","desc":"Returns a dictionary of players and their corresponding `HumanoidRootPart` instances that are currently detected in the zone","params":[{"name":"self","desc":"","lua_type":"Zone"}],"returns":[{"desc":"A dictionary of players and their corresponding `HumanoidRootPart` instances","lua_type":"{[Player]: BasePart}"}],"function_type":"static","source":{"line":296,"path":"src/Modules/Zone/init.lua"}}],"properties":[{"name":"className","desc":"Static property that defines the class name `Zone`","lua_type":"string","tags":["Static"],"source":{"line":91,"path":"src/Modules/Zone/init.lua"}},{"name":"playerAdded","desc":"An event that fires when a player enters the zone","lua_type":"Event","source":{"line":98,"path":"src/Modules/Zone/init.lua"}},{"name":"playerRemoved","desc":"An event that fires when a player leaves the zone","lua_type":"Event","source":{"line":105,"path":"src/Modules/Zone/init.lua"}},{"name":"updateInterval","desc":"The interval in seconds between each update of the list of detected players. The default value is 1 second","lua_type":"number","source":{"line":112,"path":"src/Modules/Zone/init.lua"}},{"name":"detected","desc":"An event that fires each interval when players are detected in the zone. This event doesn\'t fire if no players are detected","lua_type":"Event","source":{"line":119,"path":"src/Modules/Zone/init.lua"}}],"types":[{"name":"Self","desc":"","lua_type":"Zone","source":{"line":47,"path":"src/Modules/Zone/init.lua"}},{"name":"Event","desc":"An interface that respresents an event that can be connected to","fields":[{"name":"connect","lua_type":"(self: Event, callback: (...any) -> ()) -> EventConnection","desc":""}],"source":{"line":56,"path":"src/Modules/Zone/init.lua"}},{"name":"EventConnection","desc":"An interface that respresents a connection to an event. This `EventConnection` object can be used to disconnect a callback\\n\\n```lua\\nprint(connection.connected) -- true\\nconnection:disconnect()\\nprint(connection.connected) -- false\\n```","fields":[{"name":"connected","lua_type":"boolean","desc":""},{"name":"disconnect","lua_type":"(self: EventConnection) -> ()","desc":""}],"source":{"line":72,"path":"src/Modules/Zone/init.lua"}}],"name":"Zone","desc":"An object that uses a Roblox `Part` instance to detect when players enter and exit a zone. It can be used to monitor players in a specific area on\\neither the server or the client. The zone will attempt to detect players when they touch the `Part` instance and will continue to monitor them\\nuntil they leave the zone, the zone is checked every update interval (default 1 second)\\n\\n```lua\\nlocal part = Instance.new(\\"Part\\")\\npart.Size = Vector3.new(10, 10, 10)\\npart.Position = Vector3.new(0, 10, 0)\\npart.Anchored = true\\npart.CanCollide = false\\npart.Parent = workspace\\n\\nlocal zone = Zone.new(part)\\nzone.playerAdded:connect(function(player: Player)\\n\\tprint(player.Name, \\"entered the zone\\")\\nend)\\nzone.playerRemoved:connect(function(player: Player)\\n\\tprint(player.Name, \\"left the zone\\")\\nend)\\nzone.detected:connect(function()\\n\\tprint(\\"Players detected in the zone this interval:\\", zone:getDetectedPlayers())\\nend)\\nzone:enable()\\n```","source":{"line":148,"path":"src/Modules/Zone/init.lua"}}')}}]);