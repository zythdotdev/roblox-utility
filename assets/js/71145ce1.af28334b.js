"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[409],{94231:e=>{e.exports=JSON.parse('{"functions":[],"properties":[],"types":[{"name":"EventConnection","desc":"An interface that respresents a connection to an event. This `EventConnection` object can be used to disconnect a callback\\n\\n```lua\\nprint(connection.connected) -- true\\nconnection:disconnect()\\nprint(connection.connected) -- false\\n```","fields":[{"name":"connected","lua_type":"boolean","desc":""},{"name":"disconnect","lua_type":"() -> ()","desc":""}],"source":{"line":21,"path":"src/Modules/Connection/init.lua"}},{"name":"NetworkEvent","desc":"","lua_type":"NetworkEvent","source":{"line":27,"path":"src/Modules/Connection/init.lua"}},{"name":"NetworkRequest","desc":"","lua_type":"NetworkRequest","source":{"line":33,"path":"src/Modules/Connection/init.lua"}},{"name":"NetworkValue","desc":"","lua_type":"NetworkValue","source":{"line":39,"path":"src/Modules/Connection/init.lua"}}],"name":"Connection","desc":"The `Connection` package provides access the following network modules:\\n\\n- [NetworkEvent](/api/NetworkEvent)\\n- [NetworkRequest](/api/NetworkRequest)\\n- [NetworkValue](/api/NetworkValue)\\n\\nTo begin using the package, require it and access the various modules through the returned table\\n\\n```lua\\nlocal Connection = require(Packages.Connection)\\nlocal NetworkEvent = Connection.NetworkEvent\\nlocal NetworkRequest = Connection.NetworkRequest\\nlocal NetworkValue = Connection.NetworkValue\\n```","source":{"line":59,"path":"src/Modules/Connection/init.lua"}}')}}]);